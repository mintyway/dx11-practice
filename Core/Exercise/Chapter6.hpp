#pragma once

#include <array>
#include <d3d11.h>
#include <DirectXMath.h>

using namespace DirectX;

namespace Chapter6
{
    struct Vertex
    {
        XMFLOAT3 Position;
        XMFLOAT3 tangent;
        XMFLOAT3 normal;
        XMFLOAT2 tex0;
        XMFLOAT2 tex1;
        XMFLOAT4 color;
    };

    constexpr std::array<D3D11_INPUT_ELEMENT_DESC, 6> VertexDesc =
    {
        D3D11_INPUT_ELEMENT_DESC{"POSITION", 0, DXGI_FORMAT_R32G32B32_FLOAT, 0, 0, D3D11_INPUT_PER_VERTEX_DATA},
        D3D11_INPUT_ELEMENT_DESC{"TANGENT", 0, DXGI_FORMAT_R32G32B32_FLOAT, 0, D3D11_APPEND_ALIGNED_ELEMENT, D3D11_INPUT_PER_VERTEX_DATA},
        D3D11_INPUT_ELEMENT_DESC{"NORMAL", 0, DXGI_FORMAT_R32G32B32_FLOAT, 0, D3D11_APPEND_ALIGNED_ELEMENT, D3D11_INPUT_PER_VERTEX_DATA},
        D3D11_INPUT_ELEMENT_DESC{"TEXCOORD", 0, DXGI_FORMAT_R32G32_FLOAT, 0, D3D11_APPEND_ALIGNED_ELEMENT, D3D11_INPUT_PER_VERTEX_DATA},
        D3D11_INPUT_ELEMENT_DESC{"TEXCOORD", 1, DXGI_FORMAT_R32G32_FLOAT, 0, D3D11_APPEND_ALIGNED_ELEMENT, D3D11_INPUT_PER_VERTEX_DATA},
        D3D11_INPUT_ELEMENT_DESC{"COLOR", 0, DXGI_FORMAT_R32G32B32A32_FLOAT, 0, D3D11_APPEND_ALIGNED_ELEMENT, D3D11_INPUT_PER_VERTEX_DATA}
    };

    struct PositionVertex
    {
        XMFLOAT3 Position;
    };

    struct ColorVertex
    {
        XMFLOAT4 Color;
    };

    static constexpr std::array<D3D11_INPUT_ELEMENT_DESC, 2> BoxVertexDesc =
    {
        D3D11_INPUT_ELEMENT_DESC{"POSITION", 0, DXGI_FORMAT_R32G32B32_FLOAT, 0, 0, D3D11_INPUT_PER_VERTEX_DATA},
        D3D11_INPUT_ELEMENT_DESC{"COLOR", 0, DXGI_FORMAT_R32G32B32A32_FLOAT, 1, 0, D3D11_INPUT_PER_VERTEX_DATA}
    };
}
